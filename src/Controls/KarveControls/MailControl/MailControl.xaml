<UserControl x:Class="KarveControls.MailControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"  
             xmlns:behaviour="clr-namespace:KarveControls.Behaviour;assembly=KarveControls"
             xmlns:karveControls="clr-namespace:KarveControls"
             xmlns:karveValidation="clr-namespace:KarveCommon.Validation;assembly=KarveCommon"
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:RichTextBoxAdv="clr-namespace:Syncfusion.Windows.Controls.RichTextBoxAdv;assembly=Syncfusion.SfRichTextBoxAdv.Wpf"
             mc:Ignorable="d" 
             d:DesignHeight="1000" d:DesignWidth="800">
    <Grid>
        <Grid.Resources>
            <ResourceDictionary>

                <Style x:Key="MailControlErrorStyle" TargetType="{x:Type syncfusion:SfTextBoxExt}">

                    <Style.Triggers>

                        <Trigger Property="Validation.HasError" Value="true">

                            <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>

                        </Trigger>

                    </Style.Triggers>
                    <Setter Property="Validation.ErrorTemplate">
                        <Setter.Value>
                            <ControlTemplate x:Name="TextErrorTemplate">
                                <StackPanel Orientation="Vertical">
                                   
                                    <AdornedElementPlaceholder x:Name="errorControl">
                                        <Border BorderBrush="Red" BorderThickness="2"/>
                                    </AdornedElementPlaceholder>
                                   
                                </StackPanel>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <RichTextBoxAdv:UnderlineToggleConverter x:Key="UnderlineToggleConverter"/>
                <RichTextBoxAdv:LeftAlignmentToggleConverter x:Key="LeftAlignmentToggleConverter"/>
                <RichTextBoxAdv:CenterAlignmentToggleConverter x:Key="CenterAlignmentToggleConverter"/>
                <RichTextBoxAdv:RightAlignmentToggleConverter x:Key="RightAlignmentToggleConverter"/>
                <RichTextBoxAdv:JustifyAlignmentToggleConverter x:Key="JustifyAlignmentToggleConverter"/>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Margin" Value="12 4"/>
                </Style>
                <Style TargetType="ToggleButton">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Margin" Value="12 4"/>
                </Style>
            </ResourceDictionary>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="20*"></RowDefinition>
            <RowDefinition Height="3*"></RowDefinition>
            <RowDefinition Height="65*"></RowDefinition>
        </Grid.RowDefinitions>
        <TextBlock Background="LightBlue" Text="{Binding lcomposemail, Source={StaticResource ResourceLanguage}}"></TextBlock>
        <WrapPanel x:Name="ButtonPanel" Height="100" VerticalAlignment="Top" Grid.Row="1" Background="CadetBlue">
            <Button Height="80" Width="120" Command="{Binding SendMailCommand}" Background="{Binding ElementName=ButtonPanel, Path=Background}">
                <StackPanel Orientation="Vertical">
                    <Image Source="/KarveControls;component/Images/maildrop.png" Height="40" Width="49" RenderTransformOrigin="0.469,0.638" />
                    <TextBlock Text="{Binding lsendmail, Source={StaticResource ResourceLanguage}}" FontSize="12" HorizontalAlignment="Center" Margin="0,10,0,0"/>
                </StackPanel>
            </Button>
            <Button Height="80" Width="120" Command="RichTextBoxAdv:SfRichTextBoxAdv.PrintDocumentCommand" CommandTarget="{Binding ElementName=richTextBoxAdv}" Background="{Binding ElementName=ButtonPanel, Path=Background}">
                <StackPanel Orientation="Vertical">

                    <Image Source="/KarveControls;component/Images/largeprint.png" Height="56" Width="100" VerticalAlignment="Top"/>
                    <TextBlock Text="{Binding lprinting, Source={StaticResource ResourceLanguage}}" 
                               FontSize="12" 
                               HorizontalAlignment="Center" 
                               Height="22"/>
                </StackPanel>
            </Button>
            <Button Height="80" Width="120" Command="{Binding ExportPDFCommand}" Background="{Binding ElementName=ButtonPanel, Path=Background}" IsEnabled="{Binding HasData,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Orientation="Vertical">

                    <Image Source="/KarveControls;component/Images/pdf.png" Height="54"/>
                    <TextBlock Text="{Binding lexportpdf, Source={StaticResource ResourceLanguage}}" 
                               FontSize="12" 
                               HorizontalAlignment="Center"/>
                </StackPanel>
            </Button>
            <Button Height="80" Width="120" Command="{Binding AttachFileCommand}" Background="{Binding ElementName=ButtonPanel, Path=Background}">
                <StackPanel Orientation="Vertical">
                    <Image Source="/KarveControls;component/Images/attachfile.png" Height="43" Width="60"/>
                    <TextBlock Text="Adjunta Fichero" FontSize="12" HorizontalAlignment="Center" Margin="0,10,0,0"/>
                </StackPanel>
            </Button>
        </WrapPanel>
        <Grid Grid.Row="2" Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="70*"></ColumnDefinition>
                <ColumnDefinition Width="20*"></ColumnDefinition>

            </Grid.ColumnDefinitions>
            <Label Content="{Binding lmailFrom, Source={StaticResource ResourceLanguage}}" Grid.Column="0" Grid.Row="0" VerticalAlignment="Center"></Label>
            <Label Content="{Binding lmailTo, Source={StaticResource ResourceLanguage}}" Grid.Column="0" Grid.Row="1" VerticalAlignment="Center"></Label>
            <Label Content="{Binding lmailSubject, Source={StaticResource ResourceLanguage}}" Grid.Column="0" Grid.Row="2" VerticalAlignment="Center"></Label>
          
            <syncfusion:SfTextBoxExt Watermark="{Binding lmailsourceaddress, Source={StaticResource ResourceLanguage}}" Grid.Column="1" 
                                     Grid.Row="0" IsReadOnly="{Binding SenderReadOnly, Mode=OneWay}" 
                                     MaxHeight="30" 
                                     Style="{StaticResource MailControlErrorStyle}"
                                     AutoCompleteSource="{Binding AutoSenderComplete}"
                                     AutoCompleteMode="Suggest">
                <syncfusion:SfTextBoxExt.Text>
                    <Binding Path="SenderAddress" 
                             Mode="TwoWay"
                             UpdateSourceTrigger="LostFocus" >
                        <Binding.ValidationRules>
                            <karveValidation:EmailValidationRule></karveValidation:EmailValidationRule>
                        </Binding.ValidationRules>
                    </Binding>
                </syncfusion:SfTextBoxExt.Text>



            </syncfusion:SfTextBoxExt>
            <syncfusion:SfTextBoxExt Watermark="{Binding lmaildestination, Source={StaticResource ResourceLanguage}}" 
                                     Grid.Column="1" Grid.Row="1" 
                                     Style="{StaticResource MailControlErrorStyle}"
                                     MaxHeight="30">
                <syncfusion:SfTextBoxExt.Text>
                    <Binding Path="DestinationAddress" 
                             Mode="TwoWay"
                             UpdateSourceTrigger="LostFocus" >
                        <Binding.ValidationRules>
                            <karveValidation:EmailValidationRule></karveValidation:EmailValidationRule>
                        </Binding.ValidationRules>
                    </Binding>
                </syncfusion:SfTextBoxExt.Text>
            </syncfusion:SfTextBoxExt>
            <syncfusion:SfTextBoxExt Watermark="{Binding lmailsubject, Source={StaticResource ResourceLanguage}}" Grid.Column="1" Grid.Row="2" Text="{Binding Subject, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxHeight="30"></syncfusion:SfTextBoxExt>
            <GroupBox Header="{Binding lmailattachment, Source={StaticResource ResourceLanguage}}" Grid.RowSpan="3" Grid.Column="3" Visibility="Visible">
                <ListBox ItemsSource="{Binding AttachmentSource}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Button Command="{Binding RemoveCommand}" CommandParameter="{Binding AttachedFile}" Grid.Column="0">
                                        <Image  Source="/KarveControls;component/Images/bin.png" Height="16" Width="16" />
                                    </Button>
                                        <TextBlock Grid.Column="1" Text="{Binding AttachedFile}"/>
                                    
                                </Grid>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </GroupBox>
            <Grid  Grid.Column="1" Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="85*"></ColumnDefinition>
                    <ColumnDefinition Width="15*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
               
               
               

            </Grid>
        </Grid>

        <StackPanel Orientation="Horizontal" DataContext="{Binding ElementName=richTextBoxAdv}" Grid.Row="3">
            
                <!-- UI option to perform Undo/Redo using command binding -->
                <StackPanel Orientation="Horizontal">
                    <Button Command="RichTextBoxAdv:SfRichTextBoxAdv.UndoCommand" CommandTarget="{Binding ElementName=richTextBoxAdv}" 
                            Focusable="False">
                    <Image Source="/KarveControls;component/Images/Undo16.png" />
                    </Button>
                    <Button Command="RichTextBoxAdv:SfRichTextBoxAdv.RedoCommand" CommandTarget="{Binding ElementName=richTextBoxAdv}" Focusable="False">
                    <Image Source="/KarveControls;component/Images/Redo16.png" />
                    </Button>
                </StackPanel>
                <!-- UI option to perform Clipboard operations using command binding -->
                <Border Width="2" Height="46" Background="#1F1F1F"/>
                <StackPanel Orientation="Horizontal">
                    <Button Command="RichTextBoxAdv:SfRichTextBoxAdv.CutCommand" CommandTarget="{Binding ElementName=richTextBoxAdv}" Focusable="False">
                    <Image Source="/KarveControls;component/Images/CutHS.png"  />
                    </Button>
                    <Button Command="RichTextBoxAdv:SfRichTextBoxAdv.CopyCommand" CommandTarget="{Binding ElementName=richTextBoxAdv}" Focusable="False">
                    <Image Source="/KarveControls;component/Images/CopyHS.png"  />
                    </Button>
                    <Button Command="RichTextBoxAdv:SfRichTextBoxAdv.PasteCommand" CommandTarget="{Binding ElementName=richTextBoxAdv}" Focusable="False">
                    <Image Source="/KarveControls;component/Images/PasteHS.png"  />
                    </Button>
                </StackPanel>
                <!-- UI option to apply character formatting using property binding -->
                <Border Width="2" Height="46" Background="#1F1F1F"/>
                <StackPanel Orientation="Horizontal">
                    <ToggleButton IsChecked="{Binding Selection.CharacterFormat.Bold}" Focusable="False">
                    <Image Source="/KarveControls;component/Images/boldhs.png"  />
                    </ToggleButton>
                    <ToggleButton IsChecked="{Binding Selection.CharacterFormat.Italic}" Focusable="False">
                    <Image Source="/KarveControls;component/Images/ItalicHS.png"  />
                    </ToggleButton>
                    <ToggleButton IsChecked="{Binding Selection.CharacterFormat.Underline, Converter={StaticResource UnderlineToggleConverter}}" Focusable="False">
                    <Image Source="/KarveControls;component/Images/underline.png" />
                    </ToggleButton>
                </StackPanel>
                <Border Width="2" Height="46" Background="#1F1F1F"/>
                <!-- UI option to apply paragraph formatting using property binding -->
                <StackPanel Orientation="Horizontal">
                    <ToggleButton IsChecked="{Binding Selection.ParagraphFormat.TextAlignment, Converter={StaticResource LeftAlignmentToggleConverter}}" Focusable="False">
                    <Image Source="/KarveControls;component/Images/paragraphleftjustify.png"  />
                    </ToggleButton>
                    <ToggleButton IsChecked="{Binding Selection.ParagraphFormat.TextAlignment, Converter={StaticResource CenterAlignmentToggleConverter}}" Focusable="False">
                    <Image Source="/KarveControls;component/Images/paragraphfulljustify.png"  />
                    </ToggleButton>
                    <ToggleButton IsChecked="{Binding Selection.ParagraphFormat.TextAlignment, Converter={StaticResource RightAlignmentToggleConverter}}" Focusable="False">
                    <Image Source="/KarveControls;component/Images/paragraphrightjustify.png"  />
                    </ToggleButton>
                    <ToggleButton IsChecked="{Binding Selection.ParagraphFormat.TextAlignment, Converter={StaticResource JustifyAlignmentToggleConverter}}" Focusable="False">
                    <Image Source="/KarveControls;component/Images/paragraphcenterjustify.png"  />
                    </ToggleButton>
                </StackPanel>
           
        </StackPanel>
    
        <RichTextBoxAdv:SfRichTextBoxAdv  
                                    Background="#F1F1F1"
                                   Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" 
                                   x:Name="richTextBoxAdv"                                  
                                   FontSize="12">

            <RichTextBoxAdv:SfRichTextBoxAdv.SpellChecker>
                <RichTextBoxAdv:SpellChecker IsEnabled="True" IgnoreURIs="true" IgnoreAlphaNumericWords="true" IgnoreUppercaseWords="true"/>
            </RichTextBoxAdv:SfRichTextBoxAdv.SpellChecker>

        </RichTextBoxAdv:SfRichTextBoxAdv>


    </Grid>
</UserControl>
